%% Bisection Method
clc,clear, close all
%Equatrion for f(x)
x=0:0.01:1;
y=(4.*x.^3-6.*x.^2+7.*x-2.3);
%For upper bound
xu=1;
%For lower bound
xl=0;
iter=0;
es=.001;
ea=100;
imax=50;
s=1;
eas=length(imax);
iters=length(imax);
yu=4.*xu.^3-6.*xu.^2+7.*xu-2.3;
yl=4.*xl.^3-6.*xl.^2+7.*xl-2.3;
xr=xu-yu*((xl-xu)/(yl-yu));

while (ea > es && iter<=imax)
    %keep running untill the error is no longer >0.001
    yl=4*xl.^3-6*xl.^2+7*xl-2.3;
    yr=4*xr.^3-6*xr.^2+7*xr-2.3;
    I=yl*yr;

    if I < 0
        xu=xr;

    elseif I > 0
        xl=xr;

    end
    xrold=xr;
    xr=(xl+xu)./2;
    %equation to determine roots (BISECTION) 
    ea=abs ((xr-xrold)/xr);
    eas(s)=ea;
    iter=iter+1;
    iters(s)=iter;
    s=s+1;
end
plot(iters,eas);
grid on
grid minor
xlabel ('x')
ylabel('f(x)')
title('Bisection Method')
disp ('xr=');
disp (xr);
